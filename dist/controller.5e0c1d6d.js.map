{"version":3,"sources":["ts/Model.ts","ts/view.ts","ts/controller.ts"],"names":[],"mappings":"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","file":"controller.5e0c1d6d.js","sourceRoot":"..\\src","sourcesContent":["import { Todo } from './helpers'\n\nclass Model {\n  todos: Todo[]\n\n  constructor() {\n    this.todos = [\n      { id: 1, text: 'Learn Typescript', complete: false },\n      { id: 2, text: 'Walk your dog', complete: false },\n    ]\n  }\n\n  addTodo(newText: string) {\n    this.todos.push({\n      id: this.todos.length > 0 ? this.todos[this.todos.length - 1].id + 1 : 1,\n      text: newText,\n      complete: false,\n    })\n  }\n\n  deleteTodo(id: number) {\n    const todoExists = this.todos.find((todo) => todo.id === id)\n    if (!todoExists) {\n      return\n    }\n\n    const newTodos = this.todos.filter((todo) => todo.id !== id)\n    this.todos = newTodos\n  }\n\n  toggleTodo(id: number) {\n    const newTodos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          complete: !todo.complete,\n        }\n      }\n      return todo\n    })\n    this.todos = newTodos\n  }\n\n  editTodo(id: number, updatedText: string) {\n    const newTodos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          text: updatedText,\n        }\n      }\n\n      return todo\n    })\n\n    this.todos = newTodos\n  }\n\n  getTodos() {\n    return this.todos\n  }\n\n  getLength() {\n    return this.todos.length\n  }\n}\n\nexport default Model\n","import { Todo } from './helpers'\n\nexport const elements = {\n  todoInputBox: document.querySelector('#inputText') as HTMLInputElement,\n  submitButton: document.querySelector('#submit') as HTMLButtonElement,\n  list: document.getElementsByTagName('ul')[0] as HTMLElement,\n  listItemTemplate: document.querySelector(\n    '#listItemTemplate'\n  ) as HTMLTemplateElement,\n}\n\nexport const clearTodos = () => {\n  elements.list.innerHTML = ''\n}\n\nexport const renderTodo = (todo: Todo) => {\n  const { id, complete, text } = todo\n  const listItemTemplate = document.importNode(\n    elements.listItemTemplate.content,\n    true\n  )\n  const listItemElement = listItemTemplate.querySelector(\n    '.list-item'\n  ) as HTMLElement\n  const checkboxElement = listItemTemplate.querySelector(\n    '.checkbox'\n  ) as HTMLInputElement\n  const textElement = listItemTemplate.querySelector('.editable') as HTMLElement\n\n  listItemElement.id = id.toString()\n  checkboxElement.checked = complete\n  textElement.textContent = text\n\n  elements.list.append(listItemTemplate)\n}\n\nexport const renderTodos = (todos: Todo[]) => {\n  todos.forEach(renderTodo)\n}\n\nexport const removeTodo = (element: HTMLElement) => {\n  element.parentElement.removeChild(element)\n}\n\nexport const markSiblingComplete = (element: HTMLInputElement) => {\n  element.parentElement.children[1].classList.toggle('complete')\n}\n","// import view from './view'\nimport Model from './Model'\nimport * as view from './view'\n\n/**\n * Initialization\n */\nconst Todo = new Model()\nconst todos = Todo.getTodos()\nview.renderTodos(todos)\n\n/**\n * Add todo\n */\nview.elements.submitButton.addEventListener('click', (event) => {\n  event.preventDefault()\n  const newText = view.elements.todoInputBox.value\n\n  Todo.addTodo(newText)\n  const todos = Todo.getTodos()\n  const newTodo = todos[todos.length - 1]\n\n  // append new todo\n  view.renderTodo(newTodo)\n})\n\n/**\n * Remove todo\n */\nview.elements.list.addEventListener('click', (event) => {\n  const element = event.target as HTMLElement\n\n  if (element.classList[0] === 'delete') {\n    const todo = element.parentElement\n    Todo.deleteTodo(Number(todo.id))\n    view.removeTodo(todo)\n  }\n})\n\n/**\n * Toggle todo\n */\nview.elements.list.addEventListener('click', (event) => {\n  const element = event.target as HTMLInputElement\n\n  if (element.closest('.checkbox')) {\n    const todo = element.parentElement\n    Todo.toggleTodo(Number(todo.id))\n    view.markSiblingComplete(element)\n  }\n})\n\n/**\n * Update todo\n */\nview.elements.list.addEventListener('focusout', (event) => {\n  const element = event.target as HTMLElement\n\n  if (element.classList[0] === 'editable') {\n    const todo = element.parentElement\n    const updatedText = element.textContent\n    Todo.editTodo(Number(todo.id), updatedText)\n  }\n})\n"]}